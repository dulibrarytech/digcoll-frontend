<% include partials/header %>
<% include partials/title-banner %>

<div class="container content-section">
	<h3>Advanced Search</h3>
	<div class="page-form advanced-search-form">
		<form id="advanced-search" method="get" action="<%= root_url %>/search">
			<div id="advanced-search-query-row-1" class="form-inline">
				<div class="form-group advanced-search-bool-select">
					<select name="bool[]" class="search-element" title="Select boolean operator to search">
						<optgroup label="Boolean Search Type">
						  <% for (var i = 0; i < boolFields.length; i++) { %>
						    <% for (var key in boolFields[i]) { %>
						      <option value='<%- boolFields[i][key] %>'><%- key %></option>
						    <% } %>
						  <% } %>
						</optgroup>
					</select>
				</div>
				<div class="form-group">
					<select name="field[]" id="advanced-search-field-select-1" class="search-element advanced-search-field-select" title="Select field to search" onchange="changeAdvSearchTypeSel(this)">
						<option value="all">All Fields</option>
						<optgroup label="Specific Fields">
						  <% for (var i = 0; i < searchFields.length; i++) { %>
						    <% for (var key in searchFields[i]) { %>
						      <option value='<%- searchFields[i][key] %>'><%- key %></option>
						    <% } %>
						  <% } %>
						</optgroup>
					</select>
				</div>
				<div class="form-group">
					<select name="type[]" id="advanced-search-type-select-1" class="search-element advanced-search-type-select" title="Select search scope">
						<optgroup label="Search Type">
						  <% for (var i = 0; i < typeFields.length; i++) { %>
						    <% for (var key in typeFields[i]) { %>
						      <option value='<%- typeFields[i][key] %>'><%- key %></option>
						    <% } %>
						  <% } %>
						</optgroup>
					</select>
				</div>
				<div class="form-group search-box">
			      <input id="advanced-search-box-1" class="search-element advanced-search-box" type="text" title="Keywords" name="q[]" placeholder="Keyword(s)"/>
			    </div>
			</div>
		    <input type="hidden" name="fulltext" value="true">
		    <input type="hidden" name="advancedSearch" value="true">
		</form>
		<div class="advanced-search-form-controls">
			<div><button id="add-query-button" class="clickable icon-link-right btn-nostyle" alt="Add A New Query"><i class="far fa-plus-square"></i>Add another query</button></div>
			<div><button id="advanced-search-submit" type="button" class=".btn .btn-default .btn-large">Submit</button></div>
		</div>
	</div>
</div>

<!-- Custom advanced search form behavior -->
<script>
	var changeAdvSearchTypeSel = function(element) {
		let id = element.id,
			index = id.substring(29),
			selValue = $("#" + id + " option:selected").text();

		if(selValue == "Call Number") {
			// Remove 'Contains' option
			// let typeOpts = $("#advanced-search-type-select-" + index).children().children();
			// $(typeOpts[0]).remove();
		}

		else if(selValue == "Collection") {
			// Remove 'Contains' option
			let typeOpts = $("#advanced-search-type-select-" + index).children().children();
			$(typeOpts[0]).remove();

			// Get list of collection names for autocmplete
			var autocompleteData = <%- autocompleteData %>, collectionNames = [];
			for(var i in autocompleteData.collectionData) {
				collectionNames.push(autocompleteData.collectionData[i].name);
			}

			// Init the jquery autocomplete library, with update to only show suggestions that match the current input characters
		    $( "#advanced-search-box-" + index ).autocomplete({
		    	source: function(req, responseFn) {
		        var re = $.ui.autocomplete.escapeRegex(req.term);
		        var matcher = new RegExp( "^" + re, "i" );
		        var a = $.grep( collectionNames, function(item,index){
		            return matcher.test(item);
		        });
		        responseFn( a );
		      }
		    });
		}
	}

	$( document ).ready(function() {
		// 'Add new query' button
		$("#add-query-button").click(function(event) {
			let formRow = "<div class='form-inline'>";
			formRow += $("#advanced-search .form-inline:first-child").html();
			formRow += "</div>";
			$("#advanced-search").append(formRow);

			// Set the form element id values with a row index suffix
			$("#advanced-search .form-inline:last-child .advanced-search-field-select").attr("id", "advanced-search-field-select-" + parseInt($("#advanced-search .form-inline").length));
			$("#advanced-search .form-inline:last-child .advanced-search-type-select").attr("id", "advanced-search-type-select-" + parseInt($("#advanced-search .form-inline").length));
			$("#advanced-search .form-inline:last-child .advanced-search-box").attr("id", "advanced-search-box-" + parseInt($("#advanced-search .form-inline").length));
		});
		
		// Form submission actions
		$("#advanced-search-submit").click(function(event) {
			var autocompleteData = <%- autocompleteData %>;
			var searchFieldInputs = $('.advanced-search-field-select');

			// Update form data per search field selection
			for(var key in searchFieldInputs) {
				if(isNaN(key) == false) {
					let rowIndex = parseInt(key) + 1;
					if($("#" + searchFieldInputs[key].id).val() == "collection") {
						// Get the pid that corresponds with the selected collection title, replace the input value with the pid
						var autocompleteData = <%- autocompleteData %>;
						for(var i in autocompleteData.collectionData) {
							if(autocompleteData.collectionData[i].name == $("#advanced-search-box-"+rowIndex).val()) {
								$("#advanced-search-box-"+rowIndex).val(autocompleteData.collectionData[i].pid);
							}
						}
					}
				}
			}

			$("#advanced-search").submit();
		});
	});
</script>

<% include partials/footer %>